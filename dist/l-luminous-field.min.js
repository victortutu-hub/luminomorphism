class p extends HTMLElement{static get observedAttributes(){return["field-type","intensity","frequency","particle-count","color-primary","color-secondary","interaction-mode","field-decay","resonance-enabled","memory-enabled"]}constructor(){super(),this.attachShadow({mode:"open"}),this.canvas=document.createElement("canvas"),this.ctx=this.canvas.getContext("2d"),this.shadowRoot.appendChild(this.canvas),this.field={nodes:[],resonancePoints:[],memoryTraces:[],fieldLines:[]},this.physics={fieldType:"electromagnetic",intensity:1,frequency:.05,decay:.95,resonanceEnabled:!1,memoryEnabled:!1},this.interaction={mouse:{x:null,y:null},activeZones:new Set,fieldDisruption:0},this.animation={frameCount:0,lastTime:0,animationId:null,activeEffects:[]},this.cleanupTasks=[]}connectedCallback(){this.parseAttributes(),setTimeout(()=>{this.setupCanvas(),this.initializeField(),this.attachEventListeners(),this.startAnimation()},200)}disconnectedCallback(){this.cleanup()}attributeChangedCallback(t,e,s){e!==s&&(this.parseAttributes(),this.reinitialize())}parseAttributes(){this.physics.fieldType=this.getAttribute("field-type")||"electromagnetic",this.physics.intensity=parseFloat(this.getAttribute("intensity"))||1,this.physics.frequency=parseFloat(this.getAttribute("frequency"))||.05,this.physics.decay=parseFloat(this.getAttribute("field-decay"))||.95,this.physics.resonanceEnabled=this.getAttribute("resonance-enabled")==="true",this.physics.memoryEnabled=this.getAttribute("memory-enabled")==="true",this.config={particleCount:parseInt(this.getAttribute("particle-count"))||50,colorPrimary:this.getAttribute("color-primary")||"#00ffff",colorSecondary:this.getAttribute("color-secondary")||"#ff00ff",interactionMode:this.getAttribute("interaction-mode")||"attract"}}setupCanvas(){this.canvas.width=this.offsetWidth||800,this.canvas.height=this.offsetHeight||600;const t=document.createElement("style");t.textContent=`
      :host {
        display: block;
        width: 100%;
        height: 100%;
        position: relative;
        overflow: hidden;
      }
      canvas {
        width: 100%;
        height: 100%;
        background: transparent;
      }
    `,this.shadowRoot.appendChild(t),window.addEventListener("resize",()=>this.handleResize()),this.cleanupTasks.push(()=>{window.removeEventListener("resize",this.handleResize)})}initializeField(){const{particleCount:t,colorPrimary:e,colorSecondary:s}=this.config;this.field.nodes=[];for(let n=0;n<t;n++){const a={id:n,x:Math.random()*this.canvas.width,y:Math.random()*this.canvas.height,vx:(Math.random()-.5)*2,vy:(Math.random()-.5)*2,charge:Math.random()>.5?1:-1,energy:Math.random(),resonancePhase:Math.random()*Math.PI*2,positionHistory:this.physics.memoryEnabled?[]:null,energyHistory:[],color:Math.random()>.5?e:s,radius:2+Math.random()*3,opacity:.7+Math.random()*.3,fieldInfluence:0,resonanceAmplitude:0};this.field.nodes.push(a)}}attachEventListeners(){const t=s=>{const n=this.canvas.getBoundingClientRect();this.interaction.mouse.x=s.clientX-n.left,this.interaction.mouse.y=s.clientY-n.top,this.calculateFieldDisruption()},e=()=>{this.interaction.mouse.x=null,this.interaction.mouse.y=null,this.interaction.fieldDisruption*=.9};this.shadowRoot.addEventListener("pointermove",t),this.shadowRoot.addEventListener("pointerleave",e),this.cleanupTasks.push(()=>{this.shadowRoot.removeEventListener("pointermove",t),this.shadowRoot.removeEventListener("pointerleave",e)})}calculateFieldDisruption(){if(!this.interaction.mouse.x)return;const t=this.canvas.width/2,e=this.canvas.height/2,s=this.interaction.mouse.x-t,n=this.interaction.mouse.y-e,a=Math.sqrt(s*s+n*n),o=Math.sqrt(t*t+e*e);this.interaction.fieldDisruption=(1-a/o)*this.physics.intensity}updateField(){const{nodes:t}=this.field,{fieldType:e,intensity:s,frequency:n,decay:a}=this.physics,{mouse:o,fieldDisruption:h}=this.interaction;for(let r=0;r<t.length;r++){const i=t[r];let c=0,l=0;switch(e){case"electromagnetic":[c,l]=this.calculateElectromagneticForces(i,r);break;case"gravitational":[c,l]=this.calculateGravitationalForces(i,r);break;case"quantum":[c,l]=this.calculateQuantumForces(i,r);break}if(o.x!==null){const d=o.x-i.x,f=o.y-i.y,y=Math.sqrt(d*d+f*f);if(y<150){const m=h*(1-y/150),u=this.config.interactionMode==="attract"?1:-1;c+=d/y*m*u*.5,l+=f/y*m*u*.5}}if(this.physics.resonanceEnabled){const d=Math.sin(this.animation.frameCount*n+i.resonancePhase);i.resonanceAmplitude=d*s*.3,c+=d*.1,l+=Math.cos(this.animation.frameCount*n+i.resonancePhase)*.1}i.vx=(i.vx+c)*a,i.vy=(i.vy+l)*a,i.x+=i.vx,i.y+=i.vy,this.handleBoundaries(i),this.physics.memoryEnabled&&i.positionHistory&&(i.positionHistory.push({x:i.x,y:i.y,frame:this.animation.frameCount}),i.positionHistory.length>20&&i.positionHistory.shift()),i.energy=Math.min(1,i.energy+Math.abs(c+l)*.01),i.energyHistory.push(i.energy),i.energyHistory.length>10&&i.energyHistory.shift()}}calculateElectromagneticForces(t,e){let s=0,n=0;const{nodes:a}=this.field;for(let o=0;o<a.length;o++){if(o===e)continue;const h=a[o],r=h.x-t.x,i=h.y-t.y,c=Math.sqrt(r*r+i*i);if(c>0&&c<100){const l=t.charge*h.charge/(c*c),d=l>0?-1:1;s+=d*(r/c)*Math.abs(l)*.1,n+=d*(i/c)*Math.abs(l)*.1}}return[s,n]}calculateGravitationalForces(t,e){let s=0,n=0;const a=this.canvas.width/2,o=this.canvas.height/2,h=a-t.x,r=o-t.y,i=Math.sqrt(h*h+r*r);if(i>0){const c=this.physics.intensity/(i*.01);s=h/i*c*.001,n=r/i*c*.001}return[s,n]}calculateQuantumForces(t,e){let s=0,n=0;const a=this.physics.intensity*.1;return s=(Math.random()-.5)*a,n=(Math.random()-.5)*a,Math.random()<.001&&(t.x+=(Math.random()-.5)*50,t.y+=(Math.random()-.5)*50),[s,n]}handleBoundaries(t){const e=t.radius;t.x<e&&(t.x=e,t.vx*=-.8),t.x>this.canvas.width-e&&(t.x=this.canvas.width-e,t.vx*=-.8),t.y<e&&(t.y=e,t.vy*=-.8),t.y>this.canvas.height-e&&(t.y=this.canvas.height-e,t.vy*=-.8)}render(){const{ctx:t,canvas:e}=this;t.clearRect(0,0,e.width,e.height),this.renderFieldLines(),this.physics.memoryEnabled&&this.renderMemoryTraces(),this.renderConnections(),this.renderParticles(),this.physics.resonanceEnabled&&this.renderResonanceEffects()}renderFieldLines(){const{ctx:t}=this,{fieldType:e,intensity:s}=this.physics;if(e==="electromagnetic"){t.strokeStyle="rgba(0, 255, 255, 0.1)",t.lineWidth=.5;for(const n of this.field.nodes)if(n.charge>0){t.beginPath();for(let a=0;a<Math.PI*2;a+=Math.PI/8){const o=n.x+Math.cos(a)*10,h=n.y+Math.sin(a)*10,r=n.x+Math.cos(a)*30,i=n.y+Math.sin(a)*30;t.moveTo(o,h),t.lineTo(r,i)}t.stroke()}}}renderMemoryTraces(){const{ctx:t}=this;for(const e of this.field.nodes)if(e.positionHistory){t.strokeStyle=`${e.color}20`,t.lineWidth=1,t.beginPath();for(let s=1;s<e.positionHistory.length;s++){const n=e.positionHistory[s-1],a=e.positionHistory[s];s===1&&t.moveTo(n.x,n.y),t.lineTo(a.x,a.y)}t.stroke()}}renderConnections(){const{ctx:t}=this,{nodes:e}=this.field;for(let s=0;s<e.length;s++)for(let n=s+1;n<e.length;n++){const a=e[s],o=e[n],h=a.x-o.x,r=a.y-o.y,i=Math.sqrt(h*h+r*r);if(i<80){const c=(1-i/80)*.3;t.strokeStyle=`rgba(0, 255, 255, ${c})`,t.lineWidth=.5,t.beginPath(),t.moveTo(a.x,a.y),t.lineTo(o.x,o.y),t.stroke()}}}renderParticles(){const{ctx:t}=this;for(const e of this.field.nodes){const s=e.energy*2,n=e.radius+e.resonanceAmplitude,a=t.createRadialGradient(e.x,e.y,0,e.x,e.y,n*3),o=e.opacity,h=Math.min(.8,o+e.energy*.3);a.addColorStop(0,`${e.color}${Math.floor(h*255).toString(16).padStart(2,"0")}`),a.addColorStop(.7,`${e.color}40`),a.addColorStop(1,`${e.color}00`),t.fillStyle=a,t.beginPath(),t.arc(e.x,e.y,n,0,Math.PI*2),t.fill(),t.fillStyle=e.color,t.beginPath(),t.arc(e.x,e.y,Math.max(1,n*.3),0,Math.PI*2),t.fill()}}renderResonanceEffects(){const{ctx:t}=this;for(const e of this.field.nodes)if(Math.abs(e.resonanceAmplitude)>.1){const s=e.radius*2+Math.abs(e.resonanceAmplitude)*10,n=Math.abs(e.resonanceAmplitude)*.3;t.strokeStyle=`${e.color}${Math.floor(n*255).toString(16).padStart(2,"0")}`,t.lineWidth=2,t.beginPath(),t.arc(e.x,e.y,s,0,Math.PI*2),t.stroke()}}animate(){this.animation.frameCount++,this.updateField(),this.render(),this.animation.animationId=requestAnimationFrame(()=>this.animate())}startAnimation(){this.animation.animationId&&cancelAnimationFrame(this.animation.animationId),this.animate()}handleResize(){this.canvas.width=this.offsetWidth||800,this.canvas.height=this.offsetHeight||600}reinitialize(){this.cleanup(),this.initializeField(),this.attachEventListeners(),this.startAnimation()}cleanup(){this.animation.animationId&&(cancelAnimationFrame(this.animation.animationId),this.animation.animationId=null),this.cleanupTasks.forEach(t=>t()),this.cleanupTasks=[]}}customElements.define("l-luminous-field",p);
//# sourceMappingURL=l-luminous-field.min.js.map
